/* Generated By:JJTree: Do not edit this line. Node.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.developmentontheedge.sql.model;

/* All AST nodes must implement this interface.  It provides basic
   machinery for constructing the parent and child relationships
   between nodes. */

public interface Node
{

    /**
     * This method is called after the node has been made the current
     * node.  It indicates that child nodes can now be added to it.
     */
    public void jjtOpen();

    /**
     * This method is called after all the child nodes have been
     * added.
     */
    public void jjtClose();

    /**
     * Set node parent
     *
     * @param n new parent
     */
    public void jjtSetParent(Node n);

    /**
     * Get node parent
     *
     * @return parent node
     */
    public Node jjtGetParent();

    /**
     * This method tells the node to add its argument to the node's
     * list of children.
     *
     * @param n node to add as children
     * @param i number of children old children with the same number (if exists) will be replaced with the new one
     */
    public void jjtAddChild(Node n, int i) ;

    /**
     * This method returns a child node.  The children are numbered
     * from zero, left to right.
     *
     * @param i number of child to return
     * @return requested child
     */
    public Node jjtGetChild(int i);

    /**
     * Return the number of children the node has.
     *
     * @return number of children
     */
    public int jjtGetNumChildren();

    public boolean removeChild(Node n);

    public int getId();
}
/* JavaCC - OriginalChecksum=68c529d87264772ca2b1b58484877d33 (do not edit this line) */
