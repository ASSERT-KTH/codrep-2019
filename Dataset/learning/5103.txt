/* Generated By:JJTree: Do not edit this line. AstConcatExpression.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.developmentontheedge.sql.model;

public class AstConcatExpression extends AstFunNode implements Squasheable
{
    public AstConcatExpression(int id)
    {
        super(id);
        setFunction(DefaultParserContext.FUNC_CONCAT);
    }

    public AstConcatExpression(SimpleNode... childs)
    {
        this(SqlParserTreeConstants.JJTCONCATEXPRESSION);
        for (SimpleNode child : childs)
            addChild(child);
    }

    @Override
    public String getChildrenDelimiter(SimpleNode prev, SimpleNode next)
    {
        return next instanceof AstBeConditionChain ? null : childrenDelimiter;
    }

    @Override
    public Token getSpecialPrefix()
    {
        return jjtGetParent() instanceof AstBeNode ? null : 
super.getSpecialPrefix();
    }

    @Override
    public String getNodePrefix()
    {
        return jjtGetParent() instanceof AstBeNode ? childrenDelimiter : super.getNodePrefix();
    }
}
/* JavaCC - OriginalChecksum=ede8e3632e963b8b9ac81e7b3a7b26ed (do not edit this line) */
