/* Generated By:JJTree: Do not edit this line. AstDerivedColumn.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.developmentontheedge.sql.model;

public class AstDerivedColumn extends SimpleNode
{
    public static final AstDerivedColumn COUNT = new AstDerivedColumn(new AstCount(), "count");
    public static final AstDerivedColumn ALL = new AstDerivedColumn(new AstIdentifierConstant("*"));

    public AstDerivedColumn(int id)
    {
        super(id);
    }

    public AstDerivedColumn(SimpleNode expression)
    {
        this(SqlParserTreeConstants.JJTDERIVEDCOLUMN);
        addChild(expression);
    }

    public AstDerivedColumn(SimpleNode expression, String alias)
    {
        this(SqlParserTreeConstants.JJTDERIVEDCOLUMN);
        addChild(expression);
        setAlias(alias);
    }

    private boolean prefixComma = false, suffixComma = false, asToken = false;

    public boolean isPrefixComma()
    {
        return prefixComma;
    }

    public AstDerivedColumn setPrefixComma(boolean prefixComma)
    {
        this.prefixComma = prefixComma;
        this.nodePrefix = prefixComma ? "," : null;
        return this;
    }

    public boolean isAsToken()
    {
        return asToken;
    }

    public AstDerivedColumn setAsToken(boolean asToken)
    {
        this.asToken = asToken;
        this.childrenDelimiter = asToken ? "AS" : 	null;
        return this;
    }

    public boolean isSuffixComma()
    {
        return suffixComma;
    }

    public AstDerivedColumn setSuffixComma(boolean suffixComma)
    {
        this.suffixComma = suffixComma;
        this.nodeSuffix = suffixComma ? "," : null;
        return this;
    }

    public void setAlias(String alias)
    {
        setAsToken(true);
        if (jjtGetNumChildren() == 1)
        {
            addChild(new AstIdentifierConstant(alias, true));
        }
        else
        {
            ((AstIdentifierConstant) child(1)).setValue(alias);
        }
    }

    public String getAlias()
    {
        if (jjtGetNumChildren() == 1)
            return null;
        return ((AstIdentifierConstant) child(1)).getValue();
    }

    public String getColumn()
    {
        if (children.get(0) instanceof AstFieldReference)
            return ((AstFieldReference) child(0)).getValue();
        else if (children.get(0) instanceof AstAllColumnRef)
            return ((AstAllColumnRef) child(0)).getValue();
        return null;
    }
}
/* JavaCC - OriginalChecksum=9d3cd0a23a77eb3e3761986d7627772e (do not edit this line) */
