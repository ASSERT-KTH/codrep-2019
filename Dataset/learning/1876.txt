/* Generated By:JJTree: Do not edit this line. AstCast.java Version 6.1 */
/* JavaCCOptions:MULTI=true,NODE_USES_PARSER=false,VISITOR=false,TRACK_TOKENS=true,NODE_PREFIX=Ast,NODE_EXTENDS=,NODE_FACTORY=,SUPPORT_CLASS_VISIBILITY_PUBLIC=true */
package com.developmentontheedge.sql.model;

public class AstCast extends SimpleNode
{
    private String dataType;
    private int size = -1;
    private int scale = -1;

    public AstCast(int id)
    {
        super(id);
        this.nodePrefix = "CAST(";
        this.nodeSuffix = ")";
    }

    public AstCast(SimpleNode child, String dataType)
    {
        this(SqlParserTreeConstants.JJTCAST);
        	setDataType(dataType);
        addChild(child);
    }

    public AstCast(SimpleNode child, String dataType, int size)
    {
        this(SqlParserTreeConstants.JJTCAST);
        setDataType(dataType);
        setSize(size);
        addChild(child);
    }

    public void setDataType(String dataType)
    {
        this.dataType = dataType;
        this.nodeSuffix = "AS " + dataType + ")";
    }

    @Override
    public String getNodeSuffix()
    {
        if (dataType == null)
            return ")";
        if (size < 0)
            return "AS " + dataType + ")";
        if (scale < 0)
            return "AS " + dataType + "(" + size + "))";
        return "AS " + dataType + "(" + size + ", " + scale + "))";
    }

    public String getDataType()
    {
        return dataType;
    }

    public int getSize()
    {
        return size;
    }

    public void setSize(int size)
    {
        if (size < 0)
            size = -1;
        if (!"CHAR".equals(dataType) && !"VARCHAR".equals(dataType) && !"DECIMAL".equals(dataType) && size != -1)
            throw new IllegalArgumentException("Can specify cast size for CHAR, VARCHAR and DECIMAL types only");
        this.size = size;
    }

    public int getScale()
    {
        return scale;
    }

    public void setScale(int scale)
    {
        if (!"DECIMAL".equals(dataType))
            throw new IllegalArgumentException("Can specify cast scale for DECIMAL type only");
        this.scale = scale;
    }
}
/* JavaCC - OriginalChecksum=44964fcff6433fd51f23446299bdf8f5 (do not edit this line) */
